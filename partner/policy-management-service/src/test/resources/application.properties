server.port=1133

javax.persistence.jdbc.driver=org.h2.Driver
javax.persistence.jdbc.url = jdbc:h2:mem:mosip_pms;DB_CLOSE_DELAY=-1;INIT=RUNSCRIPT FROM 'classpath:pmpTestschema.sql' 
javax.persistence.jdbc.password = sa
javax.persistence.jdbc.user = postgres

hibernate.jdbc.lob.non_contextual_creation=true
hibernate.hbm2ddl.auto=update
hibernate.show_sql=false
hibernate.format_sql=false
hibernate.connection.charSet=utf8
hibernate.cache.use_second_level_cache=false
hibernate.cache.use_query_cache=false
hibernate.cache.use_structured_entries=false
hibernate.generate_statistics=false
spring.datasource.initialization-mode=always 

logging.level.org.springframework=OFF
logging.level.root=OFF
spring.main.banner-mode=off

pmp.policy.allowed.authtokens.types=random,partner,policy
pmp.policy.expiry.period.indays = 180
pmp.policy.schema.url= https://schemas.mosip.io/v1/auth-policy
pmp.allowed.policy.types=Auth,DataShare,CredentialIssuance
pmp.auth.policy.schema = http://localhost:8999/schema
#pmp.auth.policy.schema = {\n\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"allowedKycAttributes\":{\n\t\t\t\"type\":\"array\",\n\t\t\t\"items\":[{\n\t\t\t\t\"type\":\"object\",\n\t\t\t\t\"properties\":{\n\t\t\t\t\t\"attributeName\":{\n\t\t\t\t\t\t\"type\":\"string\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"required\":[\n\t\t\t\t\t\"attributeName\"\n\t\t\t\t]\n\t\t\t}]\n\t\t\t\n\t\t},\n\t\t\"allowedAuthTypes\":{\n\t\t\t\"type\":\"array\",\n\t\t\t\"items\":[{\n\t\t\t\t\"type\":\"object\",\n\t\t\t\t\"properties\":{\n\t\t\t\t\t\"authType\":{\n\t\t\t\t\t\t\"type\":\"string\"\n\t\t\t\t\t},\n\t\t\t\t\t\"authSubType\":{\n\t\t\t\t\t\t\"type\":\"string\"\n\t\t\t\t\t},\n\t\t\t\t\t\"mandatory\":{\n\t\t\t\t\t\t\"type\":\"boolean\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"required\":[\n\t\t\t\t\t\"authType\",\n\t\t\t\t\t\"mandatory\"\n\t\t\t\t]\n\t\t\t}]\n\t\t},\n\t\t\"authTokenType\":{\n\t\t\t\"type\":\"string\",\n\t\t\t\"enum\":[\"random\",\"partner\",\"policy\"]\n\t\t}\n\t},\n\t\"required\":[\n\t\t\"authTokenType\",\n\t\t\"allowedAuthTypes\",\n\t\t\"allowedKycAttributes\"\n\t]\t\n}
mosip.auth.adapter.impl.basepackage=io.mosip.kernel.auth.defaultadapter

mosip.base.url=https://localhost
websub.publish.url=
#------------------------Auth-Adapter-----------------------------------------------
auth.server.validate.url=${mosip.base.url}/v1/authmanager/authorize/admin/validateToken
auth.server.admin.validate.url=${mosip.base.url}/v1/authmanager/authorize/admin/validateToken
auth.jwt.secret=authjwtsecret
auth.jwt.base=Mosip-Token
iam.datastore.commonname=morocco
partner.search.maximum.rows=5
mosip.kernel.masterdata.audit-url=${mosip.base.url}/v1/auditmanager/audits

emailResourse.url=
resource.template.url=
mosip.mandatory-languages=
notifications.sent.before.days = 

partner.registration.sub-template = partner-registration-sub-template
partner.reg.content-template=partner-reg-content-template
partner.status.sub-template=partner-status-sub-template
partner.status.content-template=partner-status-content-template
partner.apikey.status.sub-template=partner-apikey-status-sub-template
apikey.status.content-template=apikey-status-content-template
spring.enable.scheduling = true
pms.notifications-schedule.init-delay = 24
pms.notifications-schedule.fixed-rate=24

#Swagger 3.0
openapi.info.title=Policy Manager Services API documentation
openapi.info.description=Policy Manager Services API documentation
openapi.info.version=1.0
openapi.info.license.name=Mosip
openapi.info.license.url=https://docs.mosip.io/platform/license

------OpenApi properties--------
mosipbox.public.url=http://localhost:9107
openapi.policyManagementService.servers[0].url=${mosipbox.public.url}/v1/policymanager
openapi.policyManagementService.servers[0].description= Policy Manager Service
mosip.notification.timezone=GMT+05:30

##################### Dynamic Properties ########################################
# For PMS Database
mosip.pmp.database.hostname=dev.mosip.net
mosip.pmp.database.port=30090
mosip.pmp.database.user=pmsuser
mosip.pmp.database.password=mosip123

#### For Authenticate Device ########
mosip.authdevice.database.hostname=dev.mosip.net
mosip.authdevice.database.port=30090
mosip.authdevice.database.user=authdeviceuser
mosip.authdevice.database.password=mosip123

######### For Registration Device ###########
mosip.regdevice.database.hostname=dev.mosip.net
mosip.regdevice.database.port=30090
mosip.regdevice.database.user=regdeviceuser
mosip.regdevice.database.password=mosip123


######################## Spring and Hibernate Configurations ####################
# ***************** PMS DB Postgres Properties ***********************
javax.persistence.jdbc.driverClassName=org.postgresql.Driver
javax.persistence.jdbc.driver=org.postgresql.Driver
javax.persistence.jdbc.url=jdbc:postgresql://${mosip.pmp.database.hostname}:${mosip.pmp.database.port}/mosip_pms
javax.persistence.jdbc.user=${mosip.pmp.database.user}
javax.persistence.jdbc.username=${mosip.pmp.database.user}
javax.persistence.jdbc.password=${mosip.pmp.database.password}
javax.persistence.jdbc.schema = pms
javax.persistence.jdbc.uinHashTable=uin_hash_salt
javax.persistence.jdbc.uinEncryptTable=uin_encrypt_salt

## For Authenticate Device
mosip.datasource.authdevice.jdbc.driver=org.postgresql.Driver
mosip.datasource.authdevice.jdbc.url = jdbc:postgresql://${mosip.authdevice.database.hostname}:${mosip.authdevice.database.port}/mosip_authdevice
mosip.datasource.authdevice.jdbc.password = ${mosip.authdevice.database.password}
mosip.datasource.authdevice.jdbc.user = ${mosip.authdevice.database.user}
mosip.datasource.authdevice.jdbc.schema = authdevice
mosip.datasource.authdevice.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect

## For Registration Device
mosip.datasource.regdevice.jdbc.driver=org.postgresql.Driver
mosip.datasource.regdevice.jdbc.url = jdbc:postgresql://${mosip.regdevice.database.hostname}:${mosip.regdevice.database.port}/mosip_regdevice
mosip.datasource.regdevice.jdbc.password = ${mosip.regdevice.database.password}
mosip.datasource.regdevice.jdbc.user = ${mosip.regdevice.database.user}
mosip.datasource.regdevice.jdbc.schema = regdevice
mosip.datasource.regdevice.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect

# *********** Hibernate Properties *************
hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect

######################### Partner Management Application Configurations ##############
# Application ID of PMP
# Used to upload other domain certs
application.id=PARTNER

# Application name of PMP
application.name=partner

# To configure starting value or initial value of mispId.
# ex: if value = 3 ==> mispId starts from  100
# if value = 4 ==> mispId starts from 1000
mosip.kernel.mispid.length = 3

# To configure length of misp license key
mosip.kernel.idgenerator.misp.license-key-length = 50

# To configure the partner types for which extractors are required. It should be "," separated.
pmp.bioextractors.required.partner.types = Credential_Partner,Online_Verification_Partner

# To configure misp license validity duration
mosip.pmp.misp.license.expiry.period.indays = 360

# To configure partner api key validity duration
mosip.pmp.partner.policy.expiry.period.indays = 360

pmp.datashare.policy.schema=${mosip.kernel.xsdstorage-uri}data-share-policy-schema.json

# credentialissuance policy schema url
pmp.credentialissuance.policy.schema=${mosip.kernel.xsdstorage-uri}data-share-policy-schema.json

# To configure email format of misp
pmp.misp.valid.email.address.regex=^[\\w-\\+]+(\\.[\\w]+)*@[\\w-]+(\\.[\\w]+)*(\\.[a-z]{2,})$

# To configure email format of partner
pmp.partner.valid.email.address.regex=^[\\w-\\+]+(\\.[\\w]+)*@[\\w-]+(\\.[\\w]+)*(\\.[a-z]{2,})$

# To configure length of partnerId
pmp.partner.partnerId.max.length=36

# To configure the length of mobile number
pmp.partner.mobileNumbe.max.length=16

# Time difference between request creation and request processing
masterdata.registerdevice.timestamp.validate=+5

# Kernel audit Service
# Kernel sign service
mosip.kernel.sign-url=https://dev.mosip.net/v1/keymanager/jwtSign

# ApplicationId for partner
mosip.pmp.auth.appId =partner

# Kernel auth client ID for partner management services
mosip.pmp.auth.clientId=mosip-partner-client

# Kernel auth secret key for partner management services
mosip.pmp.auth.secretKey= mosip123

# Key manager service API's to upload certificates
pms.cert.service.token.request.clientId=${mosip.pmp.auth.clientId}
pms.cert.service.token.request.issuerUrl=https://dev.mosip.net/v1/authmanager/authenticate/clientidsecretkey
pmp.ca.certificaticate.upload.rest.uri=https://dev.mosip.net/v1/keymanager/uploadCACertificate
pmp.partner.certificaticate.upload.rest.uri=https://dev.mosip.net/v1/keymanager/uploadPartnerCertificate
pmp.partner.certificaticate.get.rest.uri=https://dev.mosip.net/v1/keymanager/getPartnerCertificate/{partnerCertId}
pmp-keymanager.upload.other.domain.cert.rest.uri=https://dev.mosip.net/v1/keymanager/uploadOtherDomainCertificate

#Auth token generation
mosip.iam.base-url=https://dev.mosip.net
mosip.iam.adapter.clientid=${mosip.pmp.auth.clientId}
mosip.iam.adapter.clientsecret=${mosip.pmp.auth.secretKey}
mosip.iam.adapter.appid=${mosip.pmp.auth.appId}
mosip.iam.adapter.issuerURL=${mosip.iam.base-url}/auth/realms/mosip
mosip.authmanager.base-url=https://dev.mosip.net/v1/authmanager
mosip.authmanager.client-token-endpoint=${mosip.authmanager.base-url}/authenticate/clientidsecretkey
# in minutes
mosip.iam.adapter.validate-expiry-check-rate=15
# in minutes
mosip.iam.adapter.renewal-before-expiry-interval=15
#this should be false if you don't use this restTemplate true if you do
mosip.iam.adapter.self-token-renewal-enable=true
mosip.auth.filter_disable= false


# Used to get data share url to publish to websub
pmp.certificaticate.datashare.rest.uri=https://dev.mosip.net/v1/datashare/create

# Used for generating the datashare url
pms.certs.datashare.policyId=mpolicy-default-cert
pms.certs.datashare.subscriberId=mpartner-default-cert

###################KeyCloak configuration ###################################
# These configurations are used to create user in keycloak and map to a role.
# Pre-Condition: All partner types should be created as roles in keycloak.
mosip.iam.realm.operations.base-url = ${mosip.iam.base-url}/auth/admin/realms/{realmId}
mosip.iam.admin-url =${mosip.iam.base-url}/auth/admin/
mosip.iam.admin-realm-id =admin
mosip.iam.roles-extn-url =realms/mosip/roles
mosip.iam.users-extn-url = realms/mosip/users
mosip.iam.role-user-mapping-url =/{userId}/role-mappings/realm
mosip.iam.open-id-url =${mosip.iam.base-url}/auth/realms/{realmId}/protocol/openid-connect/
mosip.iam.master.realm-id=master
mosip.iam.default.realm-id=mosip
mosip.keycloak.admin.client.id=admin-cli
mosip.keycloak.admin.user.id=admin
mosip.keycloak.admin.secret.key=mosip123

##############Security properties ########################
#CSRF switch
mosip.security.csrf-enable:false
#secure cookie switch
mosip.security.secure-cookie:false

#Allowed credential types which partner can map against to policy
pmp.allowed.credential.types=auth,qrcode,euin,reprint

#Allowed partner types who can map policies to credential types
policy.credential.type.mapping.allowed.partner.types=Credential_Partner,Online_Verification_Partner

#Allowed kyc attributes
#Used to display in UI
policy.allowed.kyc.attributes = {"fullName": "Full Name","middleName": "Middle Name","lastName": "Last Name","dateOfBirth": "DateOfBirth","gender": "Gender","phone": "phone"}
#Used to display in UI
policy.auth.allowed.token.types=random,partner,policy

# IAM
# mosipbox.public.url is Ansible defined
mosip.iam.module.login_flow.name=authorization_code
mosip.iam.module.clientID=mosip-pms-client
mosip.iam.module.clientsecret=mosip123
mosip.iam.module.redirecturi=${mosipbox.public.url}/v1/partnermanager/login-redirect/
mosip.iam.module.login_flow.scope=cls
mosip.iam.module.login_flow.response_type=code
mosip.iam.authorization_endpoint=${mosipbox.public.url}/keycloak/auth/realms/mosip/protocol/openid-connect/auth
mosip.iam.module.admin_realm_id=mosip
mosip.pms.filtervalue.max_columns =100
mosip.iam.token_endpoint=${mosipbox.public.url}/keycloak/auth/realms/mosip/protocol/openid-connect/token

partner.registration.sub-template = partner-reg-sub-template

#Auth Adaptor
#List of keycloack clients allowed to invoke pms APIs
auth.server.admin.allowed.audience=mosip-creser-client,mosip-datsha-client,mosip-ida-client,mosip-regproc-client,mosip-admin-client,mosip-reg-client,mosip-pms-client,mosip-resident-client,mosip-idrepo-client

#To populate required roles which should be allowed in UI.(Roles are nothing but partner types)
mosip.pms.ui.required.roles=AUTH_PARTNER,DEVICE_PROVIDER,CREDENTIAL_PARTNER,FTM_PROVIDER,MISP_PARTNER,PARTNERMANAGER,POLICYMANAGER,PARTNER_ADMIN

# To configure misp partner type
mosip.pms.misp.partner.type=MISP_Partner

# Role for partner admin =
mosip.pms.partneradmin.role=PARTNER_ADMIN


#------------------------Auth-Adapter-----------------------------------------------
mosip.keycloak.issuerUrl=${mosipbox.public.url}/keycloak/auth/realms/mosip
auth-token-generator.rest.issuerUrl=${mosip.keycloak.issuerUrl}

#---------------- Web Sub properties -------------------------
# The base URL of dmz ingress used to point to websub service
dmz.ingress.base.url=https://dev.mosip.net
# Websub base url
websub.base.url=${mosipbox.public.url}
# Websub URL for Topic Subscriptions
websub.hub.url=${websub.base.url}/hub/
# Websub URL for Publishing/registering topics
#---------------- Web Sub property ----------------------------
packetmanager.name.source={cnie:'CNIE',default:'REGISTRATION_CLIENT',resident:'RESIDENT'}

mosip.optional-languages=ara,fra
mosip.min-languages.count=2
mosip.max-languages.count=3

# These are default languages used for sending notifications
mosip.default.template-languages=eng,ara

#Config key to pick the preferred language for communicating to the Resident
mosip.default.user-preferred-language-attribute=preferredLang

#----------------Admin masterdata---------------
# registration center type validation regex, used to restrict the special charecter
mosip.centertypecode.validate.regex=^[a-zA-Z0-9]([_-](?![_-])|[a-zA-Z0-9]){0,34}[a-zA-Z0-9]$

#Timezone
# URL to get new Auth Token from OIDC provider & to do online validation of auth token with OIDC provider.
auth.server.admin.issuer.uri=${mosipbox.public.url}/keycloak/auth/realms/

# Map to find the realm for the inputted appid to get the token from OIDC provider.
mosip.kernel.auth.appids.realm.map={prereg:'preregistration',ida:'mosip',registrationclient:'mosip',regproc:'mosip',partner:'mosip',resident:'mosip',admin:'mosip',crereq:'mosip',creser:'mosip',datsha:'mosip',idrepo:'mosip'}

pmp.api.version=v1
server.port=9107
server.servlet.context-path=/${pmp.api.version}/policymanager

springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.url=/v1/policymanager/v3/api-docs
springdoc.swagger-ui.config-url=/v1/policymanager/v3/api-docs/swagger-config
server.forward-headers-strategy=framework
springdoc.swagger-ui.baseUrl=/v1/policymanager/
#spring.mvc.servlet.path=/v1/partnermanager
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.operations-sorter=alpha
springdoc.remove-broken-reference-definitions=false
